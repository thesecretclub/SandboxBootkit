<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{00f9b865-9986-4d9c-bb53-7bb826522896}</ProjectGuid>
    <RootNamespace>SandboxBootkit</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <GenerateManifest>false</GenerateManifest>
    <TargetExt>.efi</TargetExt>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>false</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(SolutionDir)edk2\MdePkg\Include;$(SolutionDir)edk2\MdePkg\Include\X64;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>/Zc:strictStrings- %(AdditionalOptions)</AdditionalOptions>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <WholeProgramOptimization>false</WholeProgramOptimization>
    </ClCompile>
    <Link>
      <SubSystem>EFI Application</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EntryPointSymbol>EfiEntry</EntryPointSymbol>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
      <DataExecutionPrevention>false</DataExecutionPrevention>
      <AdditionalOptions>/PDBALTPATH:%_PDB% /emittoolversioninfo:no /FILEALIGN:0x1000 /ALIGN:0x1000 /BASE:0x1C0000 /IGNORE:4108,4281 %(AdditionalOptions)</AdditionalOptions>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <SetChecksum>true</SetChecksum>
      <LinkTimeCodeGeneration>Default</LinkTimeCodeGeneration>
    </Link>
    <PostBuildEvent>
      <Command>if exist "$(OutDir)bootmgfw.bak" (
    "$(OutDir)Injector\Injector.exe" "$(OutDir)bootmgfw.bak" "$(TargetPath)" "$(OutDir)bootmgfw.efi"
) else (
    echo You need to copy bootmgfw.bak next to SandboxBootkit.efi for automatic injection
)
if exist "$(OutDir)custom-deploy.cmd" (
    cd "$(OutDir)"
    call "$(OutDir)custom-deploy.cmd"
) else (
    echo No custom-deploy.cmd found, skipping...
)</Command>
    </PostBuildEvent>
    <PostBuildEvent />
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="Efi.cpp" />
    <ClCompile Include="EfiEntry.cpp" />
    <ClCompile Include="EfiUtils.cpp" />
    <ClCompile Include="PatchNtoskrnl.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="Efi.hpp" />
    <ClInclude Include="EfiUtils.hpp" />
    <ClInclude Include="PatchNtoskrnl.hpp" />
    <ClInclude Include="ProcessorBind.hpp" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>